<?xml version="1.0" ?>
<edmx:Edmx xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx" Version="4.0">
	<edmx:Reference Uri="http://docs.oasis-open.org/odata/odata/v4.0/errata03/csd01/complete/vocabularies/Org.OData.Core.V1.xml">
		<edmx:Include Namespace="Org.OData.Core.V1" Alias="OData"/>
	</edmx:Reference>
	<edmx:Reference Uri="http://docs.oasis-open.org/odata/odata/v4.0/errata03/csd01/complete/vocabularies/Org.OData.Capabilities.V1.xml">
		<edmx:Include Namespace="Org.OData.Capabilities.V1" Alias="Capabilities"/>
	</edmx:Reference>
	<edmx:Reference Uri="http://redfish.dmtf.org/schemas/v1/RedfishExtensions_v1.xml">
		<edmx:Include Namespace="RedfishExtensions.v1_0_0" Alias="Redfish"/>
	</edmx:Reference>
	<edmx:Reference Uri="http://redfish.dmtf.org/schemas/v1/RedfishYangExtensions_v1.xml">
		<edmx:Include Namespace="RedfishYangExtensions.v1_0_0" Alias="RedfishYang"/>
	</edmx:Reference>
	<edmx:Reference Uri="http://redfish.dmtf.org/schemas/v1/Resource_v1.xml">
		<edmx:Include Namespace="Resource.v1_0_0"/>
	</edmx:Reference>
	<edmx:DataServices>
		<Schema xmlns="http://docs.oasis-open.org/odata/ns/edm" Namespace="openconfig_vlan_types">
			<Annotation Term="Redfish.OwningEntity" String="TBD"/>
			<EntityType Name="openconfig_vlan_types" Abstract="true" BaseType="Resource.v1_0_0.Resource">
				<Annotation Term="OData.Description" String="Parameters for openconfig_vlan_types."/>
				<Annotation Term="OData.LongDescription" String="Parameters for openconfig_vlan_types."/>
				<Annotation Term="Capabilities.InsertRestrictions">
					<Record>
						<PropertyValue Property="Insertable" Bool="false"/>
					</Record>
				</Annotation>
				<Annotation Term="Capabilities.UpdateRestrictions">
					<Record>
						<PropertyValue Property="Updatable" Bool="false"/>
					</Record>
				</Annotation>
				<Annotation Term="Capabilities.DeleteRestrictions">
					<Record>
						<PropertyValue Property="Deletable" Bool="false"/>
					</Record>
				</Annotation>
			</EntityType>
		</Schema>
		<Schema xmlns="http://docs.oasis-open.org/odata/ns/edm" Namespace="openconfig_vlan_types.v1_0_0">
			<Annotation Term="Redfish.OwningEntity" String="TBD"/>
			<Annotation Term="Redfish.Release" String="TBD"/>
			<Annotation Term="RedfishYang.yang_version" String="1"/>
			<Annotation Term="RedfishYang.namespace" String="http://openconfig.net/yang/vlan-types"/>
			<Annotation Term="RedfishYang.organization" String="OpenConfig working group"/>
			<Annotation Term="RedfishYang.contact" String="OpenConfig working group netopenconfig@googlegroups.com"/>
			<Annotation Term="OData.Description" String="This module defines configuration and state variables for VLANs, in addition to VLAN parameters associated with interfaces."/>
			<Annotation Term="OData.LongDescription" String="This module defines configuration and state variables for VLANs, in addition to VLAN parameters associated with interfaces."/>
			<Annotation Term="RedfishYang.statement" String="oc-ext:openconfig-version"/>
			<Annotation Term="RedfishYang.revision" String="2019-01-31">
				<Annotation Term="OData.Description" String="Add TPID_ANY wildcard match and a QinQ list type."/>
				<Annotation Term="OData.LongDescription" String="Add TPID_ANY wildcard match and a QinQ list type."/>
				<Annotation Term="RedfishYang.reference" String="3.1.0"/>
			</Annotation>
			<Annotation Term="RedfishYang.revision" String="2018-11-21">
				<Annotation Term="OData.Description" String="Add OpenConfig module metadata extensions."/>
				<Annotation Term="OData.LongDescription" String="Add OpenConfig module metadata extensions."/>
				<Annotation Term="RedfishYang.reference" String="3.0.1"/>
			</Annotation>
			<Annotation Term="RedfishYang.revision" String="2018-02-14">
				<Annotation Term="OData.Description" String="Fix bug with name of 802.1ad identity."/>
				<Annotation Term="OData.LongDescription" String="Fix bug with name of 802.1ad identity."/>
				<Annotation Term="RedfishYang.reference" String="3.0.0"/>
			</Annotation>
			<Annotation Term="RedfishYang.revision" String="2017-07-14">
				<Annotation Term="OData.Description" String="Move top-level vlan data to network-instance; Update identities to comply to style guide; fixed pattern quoting; corrected trunk vlan types; added TPID config to base interface."/>
				<Annotation Term="OData.LongDescription" String="Move top-level vlan data to network-instance; Update identities to comply to style guide; fixed pattern quoting; corrected trunk vlan types; added TPID config to base interface."/>
				<Annotation Term="RedfishYang.reference" String="2.0.0"/>
			</Annotation>
			<Annotation Term="RedfishYang.revision" String="2016-05-26">
				<Annotation Term="OData.Description" String="OpenConfig public release."/>
				<Annotation Term="OData.LongDescription" String="OpenConfig public release."/>
				<Annotation Term="RedfishYang.reference" String="1.0.2"/>
			</Annotation>
			<Annotation Term="RedfishYang.statement" String="oc-ext:regexp-posix"/>
			<Annotation Term="RedfishYang.statement" String="oc-ext:catalog-organization"/>
			<Annotation Term="RedfishYang.statement" String="oc-ext:origin"/>
			<Annotation Term="RedfishYang.identity" String="TPID_TYPES">
				<Annotation Term="OData.Description" String="Base identity for TPID values that can be matched or that override the VLAN ethertype value."/>
				<Annotation Term="OData.LongDescription" String="Base identity for TPID values that can be matched or that override the VLAN ethertype value."/>
			</Annotation>
			<Annotation Term="RedfishYang.identity" String="TPID_0X8100">
				<Annotation Term="RedfishYang.base" String="TPID_TYPES"/>
				<Annotation Term="OData.Description" String="Default TPID value for 802.1q single-tagged VLANs."/>
				<Annotation Term="OData.LongDescription" String="Default TPID value for 802.1q single-tagged VLANs."/>
			</Annotation>
			<Annotation Term="RedfishYang.identity" String="TPID_0X88A8">
				<Annotation Term="RedfishYang.base" String="TPID_TYPES"/>
				<Annotation Term="OData.Description" String="TPID value for 802.1ad provider bridging, QinQ or stacked VLANs."/>
				<Annotation Term="OData.LongDescription" String="TPID value for 802.1ad provider bridging, QinQ or stacked VLANs."/>
			</Annotation>
			<Annotation Term="RedfishYang.identity" String="TPID_0X9100">
				<Annotation Term="RedfishYang.base" String="TPID_TYPES"/>
				<Annotation Term="OData.Description" String="Alternate TPID value."/>
				<Annotation Term="OData.LongDescription" String="Alternate TPID value."/>
			</Annotation>
			<Annotation Term="RedfishYang.identity" String="TPID_0X9200">
				<Annotation Term="RedfishYang.base" String="TPID_TYPES"/>
				<Annotation Term="OData.Description" String="Alternate TPID value."/>
				<Annotation Term="OData.LongDescription" String="Alternate TPID value."/>
			</Annotation>
			<Annotation Term="RedfishYang.identity" String="TPID_ANY">
				<Annotation Term="RedfishYang.base" String="TPID_TYPES"/>
				<Annotation Term="OData.Description" String="A wildcard that matches any of the generally used TPID values for singly- or multiply-tagged VLANs."/>
				<Annotation Term="OData.LongDescription" String="A wildcard that matches any of the generally used TPID values for singly- or multiply-tagged VLANs. Equivalent to matching any of TPID_0X8100, TPID_0X88A8, TPID_0X9100 and TPID_0x9200. This value is only applicable where the TPID of a packet is being matched."/>
			</Annotation>
			<TypeDefinition Name="vlan_id" UnderlyingType="RedfishYang.uint16">
				<Annotation Term="RedfishYang.YangType" EnumMember="RedfishYang.YangTypes/uint16">
					<Annotation Term="RedfishYang.range" String="1..4094"/>
				</Annotation>
				<Annotation Term="OData.Description" String="Type definition representing a single-tagged VLAN."/>
				<Annotation Term="OData.LongDescription" String="Type definition representing a single-tagged VLAN."/>
			</TypeDefinition>
			<TypeDefinition Name="vlan_range" UnderlyingType="Edm.String">
				<Annotation Term="RedfishYang.YangType" EnumMember="RedfishYang.YangTypes/string">
					<Annotation Term="RedfishYang.pattern" String="^(409[0-4]|40[0-8][0-9]|[1-3][0-9]{3}|[1-9][0-9]{1,2}|[1-9])\.\.(409[0-4]|40[0-8][0-9]|[1-3][0-9]{3}|[1-9][0-9]{1,2}|[1-9])$"/>
				</Annotation>
				<Annotation Term="OData.Description" String="Type definition representing a range of single-tagged VLANs."/>
				<Annotation Term="OData.LongDescription" String="Type definition representing a range of single-tagged VLANs. A range is specified as x..y where x and y are valid VLAN IDs (1 &lt;= vlan-id &lt;= 4094). The range is assumed to be inclusive, such that any VLAN-ID matching x &lt;= VLAN-ID &lt;= y falls within the range."/>
			</TypeDefinition>
			<TypeDefinition Name="qinq_id" UnderlyingType="Edm.String">
				<Annotation Term="RedfishYang.YangType" EnumMember="RedfishYang.YangTypes/string">
					<Annotation Term="RedfishYang.pattern" String="^(409[0-4]|40[0-8][0-9]|[1-3][0-9]{3}|[1-9][0-9]{1,2}|[1-9])\.((409[0-4]|40[0-8][0-9]|[1-3][0-9]{3}|[1-9][0-9]{1,2}|[1-9])|\*)$"/>
				</Annotation>
				<Annotation Term="OData.Description" String="Type definition representing a single double-tagged/QinQ VLAN identifier."/>
				<Annotation Term="OData.LongDescription" String="Type definition representing a single double-tagged/QinQ VLAN identifier. The format of a QinQ VLAN-ID is x.y where X is the 'outer' VLAN identifier, and y is the 'inner' VLAN identifier. Both x and y must be valid VLAN IDs (1 &lt;= vlan-id &lt;= 4094) with the exception that y may be equal to a wildcard (*). In cases where y is set to the wildcard, this represents all inner VLAN identifiers where the outer VLAN identifier is equal to x."/>
			</TypeDefinition>
			<TypeDefinition Name="qinq_id_range" UnderlyingType="Edm.Primitive">
				<Annotation Term="RedfishYang.union">
					<Collection>
						<String>"string"</String>
						<String>"string"</String>
					</Collection>
				</Annotation>
				<Annotation Term="RedfishYang.union">
					<Collection>
						<String>"string"</String>
						<String>"string"</String>
					</Collection>
				</Annotation>
				<Annotation Term="RedfishYang.YangType" EnumMember="RedfishYang.YangTypes/union"/>
				<Annotation Term="OData.Description" String="A type definition representing a range of double-tagged/QinQ VLAN identifiers."/>
				<Annotation Term="OData.LongDescription" String="A type definition representing a range of double-tagged/QinQ VLAN identifiers. The format of a QinQ VLAN-ID range can be specified in two formats. Where the range is outer VLAN IDs the range is specified as x..y.z. In this case outer VLAN identifiers meeting the criteria x &lt;= outer-vlan-id &lt;= y are accepted if and only if the inner VLAN-ID is equal to y - or any inner-tag if the wildcard is specified. Alternatively the ange can be specified as x.y..z. In this case only VLANs with an outer-vlan-id qual to x are accepted (x may again be the wildcard). Inner VLANs are accepted if they meet the inequality y &lt;= inner-vlan-id &lt;= z."/>
			</TypeDefinition>
			<EnumType Name="vlan_mode_type">
				<Member Name="ACCESS">
					<Annotation Term="RedfishYang.enum" String="ACCESS"/>
					<Annotation Term="OData.Description" String="Access mode VLAN interface (No 802.1q header)."/>
					<Annotation Term="OData.LongDescription" String="Access mode VLAN interface (No 802.1q header)."/>
				</Member>
				<Member Name="TRUNK">
					<Annotation Term="RedfishYang.enum" String="TRUNK"/>
					<Annotation Term="OData.Description" String="Trunk mode VLAN interface."/>
					<Annotation Term="OData.LongDescription" String="Trunk mode VLAN interface."/>
				</Member>
				<Annotation Term="OData.Description" String="VLAN interface mode (trunk or access)."/>
				<Annotation Term="OData.LongDescription" String="VLAN interface mode (trunk or access)."/>
			</EnumType>
			<TypeDefinition Name="vlan_ref" UnderlyingType="Edm.Primitive">
				<Annotation Term="RedfishYang.union">
					<Collection>
						<String>"vlan_id"</String>
						<String>"string"</String>
					</Collection>
				</Annotation>
				<Annotation Term="RedfishYang.union">
					<Collection>
						<String>"vlan_id"</String>
						<String>"string"</String>
					</Collection>
				</Annotation>
				<Annotation Term="RedfishYang.YangType" EnumMember="RedfishYang.YangTypes/union"/>
				<Annotation Term="OData.Description" String="Reference to a VLAN by name or id."/>
				<Annotation Term="OData.LongDescription" String="Reference to a VLAN by name or id."/>
			</TypeDefinition>
			<EnumType Name="vlan_stack_action">
				<Member Name="PUSH">
					<Annotation Term="RedfishYang.enum" String="PUSH"/>
					<Annotation Term="OData.Description" String="Push a VLAN onto the VLAN stack."/>
					<Annotation Term="OData.LongDescription" String="Push a VLAN onto the VLAN stack."/>
				</Member>
				<Member Name="POP">
					<Annotation Term="RedfishYang.enum" String="POP"/>
					<Annotation Term="OData.Description" String="Pop a VLAN from the VLAN stack."/>
					<Annotation Term="OData.LongDescription" String="Pop a VLAN from the VLAN stack."/>
				</Member>
				<Member Name="SWAP">
					<Annotation Term="RedfishYang.enum" String="SWAP"/>
					<Annotation Term="OData.Description" String="Swap the VLAN at the top of the VLAN stack."/>
					<Annotation Term="OData.LongDescription" String="Swap the VLAN at the top of the VLAN stack."/>
				</Member>
				<Annotation Term="OData.Description" String="Operations that can be performed on a VLAN stack."/>
				<Annotation Term="OData.LongDescription" String="Operations that can be performed on a VLAN stack."/>
			</EnumType>
			<EntityType Name="openconfig_vlan_types" BaseType="openconfig_vlan_types.openconfig_vlan_types">
				<Annotation Term="RedfishYang.NodeType" EnumMember="RedfishYang.NodeTypes/module"/>
			</EntityType>
			<Term Name="YangType" Type="openconfig_vlan_types.v1_0_0.YangTypes">
				<Annotation Term="OData.Description" String="A extension of openconfig_vlan_types resource instances."/>
			</Term>
			<EnumType Name="YangTypes">
				<Member Name="qinq_id"/>
				<Member Name="qinq_id_range"/>
				<Member Name="vlan_id"/>
				<Member Name="vlan_mode_type"/>
				<Member Name="vlan_range"/>
				<Member Name="vlan_ref"/>
				<Member Name="vlan_stack_action"/>
			</EnumType>
		</Schema>
	</edmx:DataServices>
</edmx:Edmx>

