<?xml version="1.0" encoding="UTF-8"?>
<edmx:Edmx xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx" Version="4.0">
  <Reference Uri="http://docs.oasis-open.org/odata/odata/v4.0/cs01/vocabularies/Org.OData.Core.V1.xml">
    <Include Alias="Odata" Namespace="Org.OData.Core.V1"/>
  </Reference>
  <Reference Uri="http://docs.oasis-open.org/odata/odata/v4.0/cs01/vocabularies/Org.OData.Capabilities.V1.xml">
    <Include Alias="Odata" Namespace="Org.OData.Capabilities.V1"/>
  </Reference>
  <DataServices>
    <Schema Namespace="ietf_interfaces.interfaces.interfaceCollection">
      <EntityType BaseType="Resource.v1_0_0.ResourceCollection" Name="ietf_interfaces.interfaces.interfaceCollection">
        <Annotation EnumMember="Redfish.Yang.NodeTypes/list" Term="RedfishYang.NodeType"/>
        <Key>
          <PropertyRef Name="name"/>
        </Key>
        <Annotation String="The list of configured interfaces on the device. The operational state of an interface is available in the /interfaces-state/interface list. If the configuration of a system-controlled interface cannot be used by the system (e.g., the interface hardware present does not match the interface type), then the configuration is not applied to the system-controlled interface shown in the /interfaces-state/interface list. If the configuration of a user-controlled interface cannot be used by the system, the configured interface is not instantiated in the /interfaces-state/interface list." Term="OData.Description"/>
        <Property Name="name" Type="Edm:String">
          <Annotation EnumMember="Redfish.Yang.NodeTypes/leaf" Term="RedfishYang.NodeType"/>
          <Annotation String="string" Term="Redfish.Yang.YangType"/>
          <Annotation String="The name of the interface. A device MAY restrict the allowed values for this leaf, possibly depending on the type of the interface. For system-controlled interfaces, this leaf is the device-specific name of the interface. The 'config false' list /interfaces-state/interface contains the currently existing interfaces on the device. If a client tries to create configuration for a system-controlled interface that is not present in the /interfaces-state/interface list, the server MAY reject the request if the implementation does not support pre-provisioning of interfaces or if the name refers to an interface that can never exist in the system. A NETCONF server MUST reply with an rpc-error with the error-tag 'invalid-value' in this case. If the device supports pre-provisioning of interface configuration, the 'pre-provisioning' feature is advertised. If the device allows arbitrarily named user-controlled interfaces, the 'arbitrary-names' feature is advertised. When a configured user-controlled interface is created by the system, it is instantiated with the same name in the /interface-state/interface list." Term="OData.Description"/>
        </Property>
        <Property Name="description" Type="Edm:String">
          <Annotation EnumMember="Redfish.Yang.NodeTypes/leaf" Term="RedfishYang.NodeType"/>
          <Annotation String="string" Term="Redfish.Yang.YangType"/>
          <Annotation String="A textual description of the interface. A server implementation MAY map this leaf to the ifAlias MIB object. Such an implementation needs to use some mechanism to handle the differences in size and characters allowed between this leaf and ifAlias. The definition of such a mechanism is outside the scope of this document. Since ifAlias is defined to be stored in non-volatile storage, the MIB implementation MUST map ifAlias to the value of 'description' in the persistently stored datastore. Specifically, if the device supports ':startup', when ifAlias is read the device MUST return the value of 'description' in the 'startup' datastore, and when it is written, it MUST be written to the 'running' and 'startup' datastores. Note that it is up to the implementation to decide whether to modify this single leaf in 'startup' or perform an implicit copy-config from 'running' to 'startup'. If the device does not support ':startup', ifAlias MUST be mapped to the 'description' leaf in the 'running' datastore." Term="OData.Description"/>
          <Annotation String="RFC 2863: The Interfaces Group MIB - ifAlias" Term="Redfish.Yang.reference"/>
        </Property>
        <Property Name="type" Type="Edm:String">
          <Annotation EnumMember="Redfish.Yang.NodeTypes/leaf" Term="RedfishYang.NodeType"/>
          <Annotation String="identityref" Term="Redfish.Yang.YangType"/>
          <Annotation String="interface-type" Term="Redfish.Yang.base"/>
          <Annotation EnumMember="Redfish.Yang.Mandatory/true" Term="Redfish.Yang.mandatory"/>
          <Annotation String="The type of the interface. When an interface entry is created, a server MAY initialize the type leaf with a valid value, e.g., if it is possible to derive the type from the name of the interface. If a client tries to set the type of an interface to a value that can never be used by the system, e.g., if the type is not supported or if the type does not match the name of the interface, the server MUST reject the request. A NETCONF server MUST reply with an rpc-error with the error-tag 'invalid-value' in this case." Term="OData.Description"/>
          <Annotation String="RFC 2863: The Interfaces Group MIB - ifType" Term="Redfish.Yang.reference"/>
        </Property>
        <Property DefaultValue="true" Name="enabled" Type="Edm:Boolean">
          <Annotation EnumMember="Redfish.Yang.NodeTypes/leaf" Term="RedfishYang.NodeType"/>
          <Annotation String="boolean" Term="Redfish.Yang.YangType"/>
          <Annotation String="This leaf contains the configured, desired state of the interface. Systems that implement the IF-MIB use the value of this leaf in the 'running' datastore to set IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry has been initialized, as described in RFC 2863. Changes in this leaf in the 'running' datastore are reflected in ifAdminStatus, but if ifAdminStatus is changed over SNMP, this leaf is not affected." Term="OData.Description"/>
          <Annotation String="RFC 2863: The Interfaces Group MIB - ifAdminStatus" Term="Redfish.Yang.reference"/>
        </Property>
        <Property Name="link_up_down_trap_enable" Type="Edm:Enumeration">
          <Annotation EnumMember="Redfish.Yang.NodeTypes/leaf" Term="RedfishYang.NodeType"/>
          <Annotation String="if-mib" Term="Redfish.Yang.if_feature"/>
          <Annotation String="enumeration" Term="Redfish.Yang.YangType"/>
          <EnumType Name="link_up_down_trap_enableEnumeration">
            <Member Name="enabled" Value="1">
              <Annotation String="enabled" Term="Redfish.Yang.enum"/>
            </Member>
            <Member Name="disabled" Value="2">
              <Annotation String="disabled" Term="Redfish.Yang.enum"/>
            </Member>
          </EnumType>
          <Annotation String="Controls whether linkUp/linkDown SNMP notifications should be generated for this interface. If this node is not configured, the value 'enabled' is operationally used by the server for interfaces that do not operate on top of any other interface (i.e., there are no 'lower-layer-if' entries), and 'disabled' otherwise." Term="OData.Description"/>
          <Annotation String="RFC 2863: The Interfaces Group MIB -&#10;                        ifLinkUpDownTrapEnable" Term="Redfish.Yang.reference"/>
        </Property>
      </EntityType>
    </Schema>
  </DataServices>
  <Reference Namespace="ietf_interfaces.interfaces.interface.xml" Uri="http://redfish.dmtf.org/schemas/v1/">
    <Include Namespace="ietf_interfaces.interfaces.interface"/>
  </Reference>
</edmx:Edmx>
